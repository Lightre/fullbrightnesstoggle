name: Build Multiple Versions

on:
  pull_request:
    paths:
      - '.github/**'
      - 'src/**'
      - 'versions/**/gradle.properties'
      - 'gradle.properties'
      - 'build.gradle'
  push:
    paths:
      - '.github/**'
      - 'src/**'
      - 'versions/**/gradle.properties'
      - 'gradle.properties'
      - 'build.gradle'

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: Find gradle.properties files
        id: find_versions
        run: |
          if [ -d "versions" ]; then
            version_files=$(find versions/* -name "gradle.properties" || true)
            if [ -z "$version_files" ]; then
              if [ -f "gradle.properties" ]; then
                version_files="gradle.properties"
              else
                echo "No gradle.properties found"
                exit 1
              fi
            fi
          else
            if [ -f "gradle.properties" ]; then
              version_files="gradle.properties"
            else
              echo "No gradle.properties found"
              exit 1
            fi
          fi
          version_files=$(echo "$version_files" | tr '\n' ' ')
          echo "version_files=$version_files" >> $GITHUB_OUTPUT

      - name: Build and Upload Each Version
        run: |
          mkdir -p build
          for version_file in ${{ steps.find_versions.outputs.version_files }}; do
            mc_version=$(grep -oP '(?<=^minecraft_version\s*=\s*).*' "$version_file" || true)
            if [ -z "$mc_version" ]; then
              echo "Minecraft version not found in $version_file"
              continue
            fi
            echo "Building for Minecraft $mc_version from $version_file"

            tmp_props="build/tmp_gradle_$mc_version.properties"
            cp gradle.properties "$tmp_props"
            cat "$version_file" >> "$tmp_props"

            ./gradlew -Dorg.gradle.project.gradleUserHomeDir="$HOME/.gradle" \
                      -p . \
                      -PgradlePropertiesFile="$tmp_props" \
                      build \
                      -DbuildDir="build/build_$mc_version" || (echo "Build failed for $mc_version" && exit 1)

            jar_path="build/build_$mc_version/libs/*.jar"
            if compgen -G "$jar_path" > /dev/null; then
              echo "Uploading JARs for $mc_version"
              gh upload-artifact --name "fullbrightnesstoggle-mc$mc_version" --path $jar_path
            else
              echo "No JARs found for $mc_version"
            fi
          done

      - name: List all built files
        run: |
          echo "Built JAR files:"
          find build -type f -name "*.jar" || echo "No jars found!"